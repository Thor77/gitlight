kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:

  - name: tests_debian_stable
    image: index.docker.io/library/debian:stable
    pull: true
    commands:
      - apt-get install -y python3-virtualenv
      - virtualenv -p 3 /tmp/.venv
      - . /tmp/.venv/bin/activate
      - pip install -r requirements/tests.txt
      - make test
    branches: master
    when:
      event: [ push, pull_request ]

  - name: tests_debian_testing
    image: index.docker.io/library/debian:testing
    pull: true
    commands:
      - apt-get install -y python3-virtualenv
      - virtualenv -p 3 /tmp/.venv
      - . /tmp/.venv/bin/activate
      - pip install -r requirements/tests.txt
      - make test
    branches: master
    when:
      event: [ push, pull_request ]

  #- name: lint
  #  image: index.docker.io/library/debian:stable
  #  pull: true
  #  commands:
  #    - 'virtualenv /tmp/.venv'
  #    - '. /tmp/.venv/bin/activate'
  #    - 'pip install -r requirements/tests.txt'
  #    - 'python ./manage.py tests'
  #  branches: master
  #  when:
  #    event: [ push, pull_request ]

  #- name: docs
  #  image: index.docker.io/library/debian:stable
  #  pull: true
  #  commands:
  #    - 'virtualenv /tmp/.venv'
  #    - '. /tmp/.venv/bin/activate'
  #    - 'pip install -r requirements/docs.txt'
  #    - 'python ./manage.py docs'
  #  branches: master
  #  when:
  #    event: [ push, pull_request ]

  #- name: coverage
  #  image: index.docker.io/library/debian:stable
  #  pull: true
  #  commands:
  #    - 'virtualenv /tmp/.venv'
  #    - '. /tmp/.venv/bin/activate'
  #    - 'pip install -r requirements/all.txt'
  #    - 'python ./manage.py coverage'
  #  branches: master
  #  when:
  #    event: [ push, pull_request ]
